@startuml
class com.ertools.demooder.presentation.viewmodel.FilesViewModel {
-  _externalFiles
+ State<List<RecordingFile>> externalFiles
+ void loadExternalRecordings(Context)
- void loadRecordings(Context,String,MutableState<List<RecordingFile>>)
- String bytesFormat(Long)
}


class com.ertools.demooder.core.notifications.MediaService {
-  job
-  scope
+ Int onStartCommand(Intent?,Int,Int)
+ IBinder? onBind(Intent?)
+ void onDestroy()
- void observeEvents()
- void updateNotification(NotificationData?)
}


interface com.ertools.demooder.core.audio.AudioRunningProvider {
+ StateFlow<Boolean> isRunning()
}

class com.ertools.demooder.presentation.viewmodel.NotificationViewModel {
}
class com.ertools.demooder.presentation.viewmodel.NotificationViewModelFactory {
}
class com.ertools.demooder.core.notifications.NotificationReceiver {
-  scope
+ void onReceive(Context,Intent)
}


class com.ertools.demooder.core.audio.AudioPlayer {
}
class com.ertools.demooder.presentation.components.scaffold.MenuItem {
}
class com.ertools.demooder.core.settings.SettingsPreferences {
+  PREFERENCES_NAME
+  DEVICE_DAMPING
+  SIGNAL_DETECTION_PERIOD
+  ENABLE_NOTIFICATIONS
+  ANGER_DETECTION_TIME
}

class com.ertools.demooder.core.settings.SettingsStore$Companion {
- DataStore<Preferences> datastore
}

class com.ertools.demooder.core.settings.SettingsStore {
+ Flow<Double> deviceDamping
+ Flow<Double> signalDetectionPeriod
+ Flow<Boolean> enableNotifications
+ Flow<Double> angerDetectionTime
+ void saveDeviceDamping(Double)
+ void saveSignalDetectionPeriod(Double)
+ void saveEnableNotifications(Boolean)
+ void saveAngerDetectionTime(Double)
}


class com.ertools.demooder.core.detector.DetectorPreprocessor {
}
class com.ertools.demooder.core.notifications.NotificationBuilder {
+ void buildChannels(Context)
}

class com.ertools.demooder.utils.Validation {
+ Boolean isNumberInRange(String,Int,Int)
}

class com.ertools.demooder.presentation.viewmodel.SettingsViewModel {
}
class com.ertools.demooder.presentation.viewmodel.SettingsViewModelFactory {
+ T create(Class<T>)
}

class com.ertools.demooder.presentation.navigation.RecordsNavigationItem {
}
class com.ertools.demooder.presentation.navigation.RecordsList {
}
class com.ertools.demooder.presentation.navigation.Player {
}
class com.ertools.demooder.utils.Permissions {
- Array<String> REQUIRED_PERMISSIONS
+ void null()
+ void null()
+ void null()
+ void null()
+ void requestPermissions(Activity)
+ Boolean isPermissionsGained(Context)
+ Boolean isPostNotificationPermissionGained(Context)
+ Boolean isReadMediaAudioPermissionGained(Context)
+ Boolean isReadExternalStoragePermissionGained(Context)
+ Boolean isRecordAudioPermissionGained(Context)
}


class com.ertools.demooder.presentation.components.shapes.PolygonShape {
}
class com.ertools.demooder.presentation.components.dialog.OptionData$InputOptionData {
}
class com.ertools.demooder.presentation.components.dialog.OptionData$SwitchOptionData {
}
class com.ertools.demooder.presentation.components.dialog.OptionData {
+ String valueToString()
+ void SettingsOption(Modifier)
+ void null()
+ void null()
}

class com.ertools.demooder.core.audio.RecordingFile {
}
class com.ertools.demooder.core.host.DemooderApp {
+ void onCreate()
}

interface com.ertools.demooder.core.audio.ProgressProvider {
+ Int getSize()
+ Int getCurrentPosition()
+ void seekTo(Int)
}

class com.ertools.demooder.presentation.viewmodel.SeekBarViewModel {
}
class com.ertools.demooder.presentation.viewmodel.SeekBarViewModelFactory {
}
class com.ertools.demooder.presentation.navigation.OutsideNavigationItem {
}
class com.ertools.demooder.presentation.navigation.Main {
}
class com.ertools.demooder.presentation.navigation.Settings {
}
interface com.ertools.demooder.core.spectrum.SpectrumProvider {
+ StateFlow<OctavesAmplitudeSpectrum> getSpectrum()
}

class com.ertools.demooder.utils.AppConstants {
+  APP_DIR_NAME
+  CLASSIFIER_NAME
+  CLASSIFIER_INPUT_SAMPLE_RATE
+  CLASSIFIER_PREPROCESSING_FRAME_SIZE
+  CLASSIFIER_PREPROCESSING_FRAME_STEP
+  CLASSIFIER_PREPROCESSING_WINDOWING
+  CLASSIFIER_THREAD_COUNT
+  CLASSIFIER_USE_NNAPI
+  CLASSIFIER_RECORDING_PERIOD_MILLIS
+  SPEECH_DETECTOR_NAME
+  DETECTOR_CLASSES_AMOUNT
+  DETECTOR_SPEECH_CLASS_ID
+  RECORDER_DELAY_MILLIS
+  RECORDER_SAMPLE_RATE
+  RECORDER_WEIGHTING
+  UI_GRAPH_UPDATE_DELAY
+  UI_GRAPH_MAX_DATA_SIZE
+  UI_SEEK_BAR_UPDATE_DELAY
+  HISTORY_MAX_SIZE
+  NOTIFICATION_MICROPHONE_ID
+  NOTIFICATION_MICROPHONE_CHANNEL_ID
+  NOTIFICATION_MICROPHONE_CHANNEL_NAME
+  NOTIFICATION_MEDIA_ID
+  NOTIFICATION_MEDIA_CHANNEL_ID
+  NOTIFICATION_MEDIA_CHANNEL_NAME
+  NOTIFICATION_ACTION_START
+  NOTIFICATION_ACTION_STOP
+  NOTIFICATION_ACTION_NOTIFY
+  NOTIFICATION_DATA
+  SETTINGS_DEFAULT_DEVICE_DAMPING
+  SETTINGS_DEFAULT_SIGNAL_DETECTION_SECONDS
+  SETTINGS_DEFAULT_ENABLE_NOTIFICATIONS
+  SETTINGS_DEFAULT_ANGER_DETECTION_TIME
+  BUNDLE_KEY_RECORDS_FILE
}

interface com.ertools.demooder.core.detector.DetectionProvider {
+ StateFlow<Boolean> isSpeech()
}

class com.ertools.demooder.core.notifications.NotificationEventStream {
+  events
}

class com.ertools.demooder.core.classifier.Prediction {
}
class com.ertools.demooder.core.audio.AudioRecorder {
-  sampleRate
-  recorderBufferSize
- AudioRecord recorder
-  isPlaying
+ void null()
+ void start()
+ void stop()
+ StateFlow<Boolean> isRunning()
+ Int? read(ByteArray)
+ Int? getSampleRate()
- void shiftAudioBuffer(ByteArray,Int)
}


class com.ertools.demooder.core.spectrum.SpectrumBuilder {
+ void build(RawData)
}

class com.ertools.demooder.core.host.MainActivity {
+ void onStart()
+ void onCreate(Bundle?)
- void cancelNotifications(Context)
}

class com.ertools.demooder.core.classifier.EmotionClassifier {
-  modelConfiguration
-  spectrogramConfiguration
-  labels
+  isModelInitialized
- ModelShape shape
- Interpreter classifier
- ClassifierPreprocessor preprocessor
+ void loadClassifier(Context,Boolean)
+ void predict(RawData,Int,(List<Prediction>) -> (Unit))
}


class com.ertools.demooder.core.notifications.NotificationData {
}
enum com.ertools.demooder.core.notifications.NotificationAction {
+  INIT
+  START
+  STOP
+  UPDATE
+  DESTROY
}

class com.ertools.demooder.presentation.theme.Shape {
+  Shapes
}

class com.ertools.demooder.core.detector.SpeechDetector {
-  modelConfiguration
-  detectorClassesAmount
-  detectorSpeechClassId
+  isModelInitialized
- ModelShape shape
- Interpreter detector
- DetectorPreprocessor preprocessor
+ void loadModel(Context)
+ void detectSpeech(RawData,Int,(Boolean) -> (Unit))
- Boolean isSpeechVoting(List<Boolean>)
}


class com.ertools.demooder.presentation.navigation.InsideNavigationRoutes {
+  list
}

class com.ertools.demooder.presentation.navigation.InsideNavigationItem$Home {
}
class com.ertools.demooder.presentation.navigation.InsideNavigationItem$Prediction {
}
class com.ertools.demooder.presentation.navigation.InsideNavigationItem$Records {
}
class com.ertools.demooder.presentation.navigation.InsideNavigationItem {
}
class com.ertools.demooder.core.classifier.PredictionRepository {
-  _predictionHistory
+ StateFlow<List<Prediction>> predictionHistory
+ void updatePredictions(List<Prediction>)
+ void reset()
}


class com.ertools.demooder.presentation.viewmodel.StatisticsViewModel {
}
interface com.ertools.demooder.core.classifier.PredictionProvider {
+ StateFlow<List<Prediction>> last(Int)
+ StateFlow<Int> count(Emotion)
+ void reset()
}

class com.ertools.demooder.presentation.theme.Colors {
+  PRIMARY
+  ON_PRIMARY
+  PRIMARY_CONTAINER
+  ON_PRIMARY_CONTAINER
+  INVERSE_PRIMARY
+  SECONDARY
+  ON_SECONDARY
+  SECONDARY_CONTAINER
+  ON_SECONDARY_CONTAINER
+  TERTIARY
+  ON_TERTIARY
+  TERTIARY_CONTAINER
+  ON_TERTIARY_CONTAINER
+  ERROR
+  ON_ERROR
+  ERROR_CONTAINER
+  ON_ERROR_CONTAINER
+  SURFACE
+  ON_SURFACE
+  SURFACE_CONTAINER
+  SURFACE_CONTAINER_LOW
+  SURFACE_CONTAINER_LOWEST
+  SURFACE_CONTAINER_HIGH
+  SURFACE_CONTAINER_HIGHEST
+  SURFACE_VARIANT
+  ON_SURFACE_VARIANT
+  INVERSE_SURFACE
+  INVERSE_ON_SURFACE
+  SURFACE_BRIGHT
+  SURFACE_DIM
+  SURFACE_TINT
+  BACKGROUND
+  ON_BACKGROUND
+  OUTLINE
+  OUTLINE_VARIANT
}

class com.ertools.demooder.utils.AppFormat {
+ String timeFormat(Int)
+ String dateFormat(String)
}

class com.ertools.demooder.presentation.viewmodel.AudioViewModel {
}
class com.ertools.demooder.presentation.viewmodel.AudioViewModelFactory {
}
interface com.ertools.demooder.core.audio.AudioProvider {
+ void start()
+ void stop()
+ Int? read(ByteArray)
+ Int? getSampleRate()
+ StateFlow<Boolean> isRunning()
}

class com.ertools.demooder.core.classifier.ClassifierPreprocessor {
}
class com.ertools.demooder.presentation.theme.Theme {
-  DarkColorPalette
-  LightColorPalette
+ void MainTheme(void,Boolean,void,@Composable () -> Unit)
+ void null()
}




androidx.lifecycle.AndroidViewModel <|-- com.ertools.demooder.presentation.viewmodel.FilesViewModel
android.app.Service <|-- com.ertools.demooder.core.notifications.MediaService
android.content.BroadcastReceiver <|-- com.ertools.demooder.core.notifications.NotificationReceiver
com.ertools.demooder.core.settings.SettingsStore +.. com.ertools.demooder.core.settings.SettingsStore$Companion
com.ertools.demooder.presentation.viewmodel.Factory <|.. com.ertools.demooder.presentation.viewmodel.SettingsViewModelFactory
com.ertools.demooder.presentation.navigation.RecordsNavigationItem <|-- com.ertools.demooder.presentation.navigation.RecordsList
com.ertools.demooder.presentation.navigation.RecordsNavigationItem <|-- com.ertools.demooder.presentation.navigation.Player
com.ertools.demooder.presentation.components.dialog.OptionData +.. com.ertools.demooder.presentation.components.dialog.OptionData$InputOptionData
com.ertools.demooder.presentation.components.dialog.OptionData +.. com.ertools.demooder.presentation.components.dialog.OptionData$SwitchOptionData
android.app.Application <|-- com.ertools.demooder.core.host.DemooderApp
com.ertools.demooder.presentation.navigation.OutsideNavigationItem <|-- com.ertools.demooder.presentation.navigation.Main
com.ertools.demooder.presentation.navigation.OutsideNavigationItem <|-- com.ertools.demooder.presentation.navigation.Settings
com.ertools.demooder.core.audio.AudioProvider <|.. com.ertools.demooder.core.audio.AudioRecorder
androidx.activity.ComponentActivity <|-- com.ertools.demooder.core.host.MainActivity
com.ertools.demooder.presentation.navigation.InsideNavigationItem +.. com.ertools.demooder.presentation.navigation.InsideNavigationItem$Home
com.ertools.demooder.presentation.navigation.InsideNavigationItem <|-- com.ertools.demooder.presentation.navigation.InsideNavigationItem$Home
com.ertools.demooder.presentation.navigation.InsideNavigationItem +.. com.ertools.demooder.presentation.navigation.InsideNavigationItem$Prediction
com.ertools.demooder.presentation.navigation.InsideNavigationItem <|-- com.ertools.demooder.presentation.navigation.InsideNavigationItem$Prediction
com.ertools.demooder.presentation.navigation.InsideNavigationItem +.. com.ertools.demooder.presentation.navigation.InsideNavigationItem$Records
com.ertools.demooder.presentation.navigation.InsideNavigationItem <|-- com.ertools.demooder.presentation.navigation.InsideNavigationItem$Records
com.ertools.demooder.core.audio.AudioRunningProvider <|.. com.ertools.demooder.core.audio.AudioProvider
@enduml